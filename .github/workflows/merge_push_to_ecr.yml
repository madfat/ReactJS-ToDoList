name: Build and Push to ECR

on:
  push:
    branches:
      - cicd  # Or the branch you want to trigger the action on merge

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # Required for OIDC
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # or the version your app needs

      - name: Install dependencies
        run: npm ci

      - name: Build the React App
        run: |
          unset CI
          npm run build

      - name: Assume AWS Role using OIDC
        id: aws-credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin 442387259505.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and tag Docker image
        run: |
          # Define your image name and tag
          IMAGE_TAG=latest
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:${IMAGE_TAG}
          
          # Build the Docker image
          docker build -t $IMAGE_URI .

      - name: Push Docker image to ECR
        run: |
          IMAGE_TAG=latest
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:${IMAGE_TAG}
          
          # Push the image
          docker push $IMAGE_URI
